/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-pagerduty-api/apis/user/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ContactMethodLister helps list ContactMethods.
// All objects returned here must be treated as read-only.
type ContactMethodLister interface {
	// List lists all ContactMethods in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ContactMethod, err error)
	// ContactMethods returns an object that can list and get ContactMethods.
	ContactMethods(namespace string) ContactMethodNamespaceLister
	ContactMethodListerExpansion
}

// contactMethodLister implements the ContactMethodLister interface.
type contactMethodLister struct {
	indexer cache.Indexer
}

// NewContactMethodLister returns a new ContactMethodLister.
func NewContactMethodLister(indexer cache.Indexer) ContactMethodLister {
	return &contactMethodLister{indexer: indexer}
}

// List lists all ContactMethods in the indexer.
func (s *contactMethodLister) List(selector labels.Selector) (ret []*v1alpha1.ContactMethod, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ContactMethod))
	})
	return ret, err
}

// ContactMethods returns an object that can list and get ContactMethods.
func (s *contactMethodLister) ContactMethods(namespace string) ContactMethodNamespaceLister {
	return contactMethodNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ContactMethodNamespaceLister helps list and get ContactMethods.
// All objects returned here must be treated as read-only.
type ContactMethodNamespaceLister interface {
	// List lists all ContactMethods in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ContactMethod, err error)
	// Get retrieves the ContactMethod from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.ContactMethod, error)
	ContactMethodNamespaceListerExpansion
}

// contactMethodNamespaceLister implements the ContactMethodNamespaceLister
// interface.
type contactMethodNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ContactMethods in the indexer for a given namespace.
func (s contactMethodNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ContactMethod, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ContactMethod))
	})
	return ret, err
}

// Get retrieves the ContactMethod from the indexer for a given namespace and name.
func (s contactMethodNamespaceLister) Get(name string) (*v1alpha1.ContactMethod, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("contactmethod"), name)
	}
	return obj.(*v1alpha1.ContactMethod), nil
}
